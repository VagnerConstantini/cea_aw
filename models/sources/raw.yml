version: 2

sources:
  - name: raw_adventure_works
    # Database is inherited from the environment (target.database = FEA25_05).
    schema: raw_adventure_works
    description: "Raw AdventureWorks tables used for the Sales domain."

    tables:

      # SALES
      - name: salesorderheader
        identifier: SALES_SALESORDERHEADER
        description: "Order headers."
        columns:
          - name: SalesOrderID
            description: "Primary key of the order header."
            tests: [not_null, unique]

          - name: CustomerID
            description: "FK to customer."
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'customer')
                  field: CustomerID

          - name: OrderDate
            description: "Order creation date."
            tests: [not_null]

      - name: salesorderdetail
        identifier: SALES_SALESORDERDETAIL
        description: "Order line items (detail rows)."
        tests:
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns: [SalesOrderID, SalesOrderDetailID]
        columns:
          - name: SalesOrderID
            description: "FK to order header."
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'salesorderheader')
                  field: SalesOrderID

          - name: SalesOrderDetailID
            description: "Line identifier inside an order."
            tests: [not_null]

          - name: ProductID
            description: "FK to product."
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'product')
                  field: ProductID

          - name: OrderQty
            description: "Quantity ordered."
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: ">= 1"
                  severity: warn

          - name: UnitPrice
            description: "Unit price applied on the line."
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: ">= 0"
                  severity: warn

          - name: UnitPriceDiscount
            description: "Unit discount applied on the line."
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "between 0 and 1"
                  severity: warn

      - name: customer
        identifier: SALES_CUSTOMER
        description: "Customers (person or store accounts)."
        columns:
          - name: CustomerID
            tests: [not_null, unique]

          - name: PersonID
            description: >
              FK to Person. Filled when the customer is an individual person,
              or when a person is registered as the contact of a store.
              Null only when the customer is a store without a linked contact person.
            tests:
              - relationships:
                  to: source('raw_adventure_works', 'person')
                  field: BusinessEntityID
                  severity: warn

          - name: StoreID
            description: >
              FK to Store. Filled when the customer is a store.
              Null when the customer is only an individual person.
            tests:
              - relationships:
                  to: source('raw_adventure_works', 'store')
                  field: BusinessEntityID
                  severity: warn

      - name: store
        identifier: SALES_STORE
        description: "Stores (B2B customers)."
        columns:
          - name: BusinessEntityID
            tests: [not_null, unique]

          - name: Name
            tests: [not_null]

      - name: creditcard
        identifier: SALES_CREDITCARD
        description: "Credit cards used by customers."
        columns:
          - name: CreditCardID
            tests: [not_null, unique]

          - name: CardType
            tests: [not_null]

      - name: salesreason
        identifier: SALES_SALESREASON
        description: "Sales reasons (e.g., Promotion, Marketing)."
        columns:
          - name: SalesReasonID
            tests: [not_null, unique]

          - name: Name
            tests: [not_null]

          - name: ReasonType
            tests: [not_null]

      - name: salesorderheadersalesreason
        identifier: SALES_SALESORDERHEADERSALESREASON
        description: "Bridge between orders and sales reasons (M:N)."
        tests:
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns: [SalesOrderID, SalesReasonID]
        columns:
          - name: SalesOrderID
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'salesorderheader')
                  field: SalesOrderID

          - name: SalesReasonID
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'salesreason')
                  field: SalesReasonID

      # PRODUCTION
      - name: product
        identifier: PRODUCTION_PRODUCT
        description: "Products catalog."
        columns:
          - name: ProductID
            tests: [not_null, unique]

          - name: Name
            tests: [not_null]

          - name: ProductSubcategoryID
            description: "FK to product subcategory (nullable for some products)."
            tests:
              - relationships:
                  to: source('raw_adventure_works', 'productsubcategory')
                  field: ProductSubcategoryID
                  severity: warn

      - name: productsubcategory
        identifier: PRODUCTION_PRODUCTSUBCATEGORY
        description: "Product subcategories."
        columns:
          - name: ProductSubcategoryID
            tests: [not_null, unique]
          - name: ProductCategoryID

            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'productcategory')
                  field: ProductCategoryID

          - name: Name
            tests: [not_null]

      - name: productcategory
        identifier: PRODUCTION_PRODUCTCATEGORY
        description: "Product categories."
        columns:
          - name: ProductCategoryID
            tests: [not_null, unique]

          - name: Name
            tests: [not_null]

      # PERSON
      - name: person
        identifier: PERSON_PERSON
        description: "Persons (names and types)."
        columns:
          - name: BusinessEntityID
            tests: [not_null, unique]

          - name: PersonType
            description: "Optional person type code."
            tests:
              - accepted_values:
                  values: ['SC','IN','SP','EM','VC','GC']
                  severity: warn

      - name: address
        identifier: PERSON_ADDRESS
        description: "Addresses (city + state/province)."
        columns:
          - name: AddressID
            tests: [not_null, unique]

          - name: City
            tests: [not_null]

          - name: StateProvinceID
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'stateprovince')
                  field: StateProvinceID

      - name: stateprovince
        identifier: PERSON_STATEPROVINCE
        description: "States/Provinces and their country codes."
        columns:
          - name: StateProvinceID
            tests: [not_null, unique]

          - name: CountryRegionCode
            tests:
              - not_null
              - relationships:
                  to: source('raw_adventure_works', 'countryregion')
                  field: CountryRegionCode

          - name: Name
            tests: [not_null]

      - name: countryregion
        identifier: PERSON_COUNTRYREGION
        description: "Country/Region reference table."
        columns:
          - name: CountryRegionCode
            tests: [not_null, unique]

          - name: Name
            tests: [not_null]

